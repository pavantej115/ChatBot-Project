name: CI/CD for ChatBot Project

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Backend CI
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run Backend Tests
        env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd backend
          pytest

  # Frontend CI
  frontend-linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Linting Tools
        run: |
          npm install -g htmlhint csslint eslint

      - name: Lint HTML
        run: htmlhint frontend/index.html

      - name: Lint JavaScript
        run: eslint frontend/script.js --config frontend/eslint.config.js
        
  deploy:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-linting]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
  
      - name: Set Up SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
  
      - name: Create .ssh directory if it doesn't exist
        run: |
          mkdir -p ~/.ssh
  
      - name: Add EC2 Host to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
  
      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          cd /path/to/project
          git pull origin main
          cd backend
          nohup python app.py &
  
          # Install web server (Apache as an example)
          sudo apt-get update
          sudo apt-get install -y apache2
          sudo cp /path/to/project/frontend/index.html /var/www/html/
          sudo systemctl restart apache2
          EOF



